version: "2"
services:
  rabbitmq:
    image: rabbitmq:3.8-management
    container_name: rabbitmq
    hostname: my_rabbitmq
    networks:
      cloud-network:
        aliases:
          - rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
        # server port
      - "5672:5672"
    #   management page port
      - "15672:15672"
  mariadb:
    image: mariadb
    container_name: mariadb
    networks:
      cloud-network:
        aliases:
          - mariadb
    environment:
      MYSQL_USER: root
      MYSQL_PASSWORD:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      TZ: Asia/shanghai
    volumes:
      - /opt/docker/data/marina/my.cnf:/etc/mysql/my.cnf
      - /opt/docker/data/marina:/var/lib/mysql
    ports:
      - "3306:3306"
  redis:
    image: redis:latest
    container_name: redis
    networks:
      cloud-network:
        aliases:
          - redis
    command: ["redis-server", "/etc/redis/redis.conf"]
    volumes:
#        ro 表示容器对该文件只读, 默认是rw 可读写
        - /opt/docker/data/redis/redis.conf:/etc/redis/redis.conf:ro
        - /opt/docker/data/redis/data:/data
        - /opt/docker/data/redis/logs:/logs
    ports:
        - "6379:6379"
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    networks:
      cloud-network:
        aliases:
          - zipkin
    ports:
      - "9411:9411"
  eureka1:
    image: registry.cn-hangzhou.aliyuncs.com/z_q/eureka
    container_name: eureka1
    networks:
      cloud-network:
        aliases:
          - eureka1
    environment:
      spring.profiles.active: eureka1
    ports:
      - "8761:8761"
  eureka2:
    image: registry.cn-hangzhou.aliyuncs.com/z_q/eureka
    container_name: eureka2
    networks:
      cloud-network:
        aliases:
          - eureka2
    environment:
      spring.profiles.active: eureka2
    ports:
      - "8762:8762"
  config:
    image: registry.cn-hangzhou.aliyuncs.com/z_q/config
    container_name: config
    networks:
      cloud-network:
        aliases:
          - config
    environment:
      spring.profiles.active: prod
    ports:
      - "8020:8080"
  api-gateway:
    image: registry.cn-hangzhou.aliyuncs.com/z_q/api-gateway
    container_name: api-gateway
    networks:
      cloud-network:
        aliases:
          - api-gateway
    environment:
      spring.profiles.active: prod
    ports:
      - "8080:8080"
  product:
    image: registry.cn-hangzhou.aliyuncs.com/z_q/product
    container_name: product
    networks:
      cloud-network:
        aliases:
          - product
    environment:
      spring.profiles.active: prod
    ports:
      - "8000:8080"
  order:
    image: registry.cn-hangzhou.aliyuncs.com/z_q/order
    container_name: order
    networks:
      cloud-network:
        aliases:
          - order
    environment:
      spring.profiles.active: prod
    ports:
      - "8010:8080"
  user:
    image: registry.cn-hangzhou.aliyuncs.com/z_q/user
    container_name: user
    networks:
      cloud-network:
        aliases:
          - user
    environment:
      spring.profiles.active: prod
    ports:
      - "8030:8080"
networks:
  cloud-network:
    driver: bridge